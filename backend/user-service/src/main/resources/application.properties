# =============================================================================
# Healthcare Insurance Claim System - User Service Configuration
# Development Environment Configuration
# =============================================================================

# Application Configuration
spring.application.name=healthcare-user-service
server.port=8080
server.servlet.context-path=/api

# =============================================================================
# Database Configuration
# =============================================================================
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/postgres}
spring.datasource.username=${DATABASE_USERNAME:postgres}
spring.datasource.password=${DATABASE_PASSWORD:1234}
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=1200000

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

# =============================================================================
# Performance Optimization Configuration
# =============================================================================

# Enable response compression
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain,text/css,application/javascript
server.compression.min-response-size=1024

# Connection optimization
server.tomcat.threads.max=200
server.tomcat.threads.min-spare=10
server.tomcat.accept-count=100
server.tomcat.max-connections=8192

# Enable caching for better performance
spring.cache.type=simple
spring.cache.cache-names=userRoles,departments,roles

# =============================================================================
# JWT Configuration
# =============================================================================
jwt.secret=${JWT_SECRET:defaultDevSecretKeyForJWTTokenGenerationInTicketingSystem2024MoreCharactersToMeet512BitRequirement}
jwt.expiration=${JWT_EXPIRATION:900000}
jwt.refresh.expiration=${JWT_REFRESH_EXPIRATION:604800000}

# JWT Token Configuration
jwt.token.prefix=Bearer 
jwt.token.header=Authorization
jwt.token.expiration=${JWT_EXPIRATION:900000}
jwt.refresh.token.expiration=${JWT_REFRESH_EXPIRATION:604800000}

# CORS Configuration - Disabled since API Gateway handles CORS
# spring.web.cors.allowed-origins=http://localhost:3000,http://localhost:5173,http://localhost:8080
# spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
# spring.web.cors.allowed-headers=*
# spring.web.cors.allow-credentials=true

# =============================================================================
# Email Configuration (for password reset and notifications)
# =============================================================================
spring.mail.host=${MAIL_HOST:localhost}
spring.mail.port=${MAIL_PORT:1025}
spring.mail.username=${MAIL_USERNAME:dev@localhost}
spring.mail.password=${MAIL_PASSWORD:dev}
spring.mail.properties.mail.smtp.auth=${MAIL_SMTP_AUTH:false}
spring.mail.properties.mail.smtp.starttls.enable=${MAIL_SMTP_STARTTLS:false}
spring.mail.properties.mail.smtp.starttls.required=${MAIL_SMTP_STARTTLS:false}
spring.mail.properties.mail.smtp.ssl.trust=${MAIL_HOST:localhost}

# =============================================================================
# Logging Configuration
# =============================================================================
logging.level.com.gvkss.patil.user_service=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# =============================================================================
# API Documentation Configuration
# =============================================================================
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true

# =============================================================================
# Service Discovery Configuration
# =============================================================================
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${server.port}

# =============================================================================
# Application Specific Configuration
# =============================================================================
# User Service Configuration
app.user.default-role=PATIENT
app.user.password.min-length=8
app.user.password.max-length=128
app.user.account.lockout-attempts=5
app.user.account.lockout-duration=900000

# Rate Limiting Configuration
app.rate-limit.login.attempts=5
app.rate-limit.login.window=60000

# Healthcare Specific Configuration
app.healthcare.claim.max-file-size=10485760
app.healthcare.claim.allowed-file-types=pdf,jpg,jpeg,png,doc,docx
app.healthcare.claim.processing-time-days=7
app.healthcare.claim.emergency-processing-time-days=1

# =============================================================================
# Environment Specific Configuration
# =============================================================================
# Default profile (development)
spring.profiles.active=${SPRING_PROFILES_ACTIVE:default}

# Management Endpoints
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.health.db.enabled=true
management.health.mail.enabled=true

# =============================================================================
# Database Migration Configuration
# =============================================================================
# Flyway Configuration - Re-enabled with baseline setup
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.baseline-version=0
spring.flyway.validate-on-migrate=false
spring.flyway.out-of-order=true

# =============================================================================
# Service Discovery Configuration Override
# =============================================================================
# Enable Eureka for microservices architecture
eureka.client.enabled=true
spring.cloud.discovery.enabled=true
